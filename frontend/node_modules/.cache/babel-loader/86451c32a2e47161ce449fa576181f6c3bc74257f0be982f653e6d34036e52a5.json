{"ast":null,"code":"/**\r\n * 숫자를 한국 원화 형식으로 포맷\r\n * @param {number} amount - 포맷할 금액\r\n * @returns {string} 포맷된 금액 문자열\r\n */\nexport const formatCurrency = amount => {\n  if (amount === null || amount === undefined) return '₩0';\n  return new Intl.NumberFormat('ko-KR', {\n    style: 'currency',\n    currency: 'KRW',\n    minimumFractionDigits: 0\n  }).format(amount);\n};\n\n/**\r\n * ISO 날짜 문자열을 한국 형식으로 포맷\r\n * @param {string} dateString - ISO 형식의 날짜 문자열\r\n * @returns {string} 포맷된 날짜 문자열\r\n */\nexport const formatDate = dateString => {\n  if (!dateString) return '';\n  const date = new Date(dateString);\n  return new Intl.DateTimeFormat('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  }).format(date);\n};\n\n/**\r\n * 문자열을 지정된 길이로 잘라서 반환 (긴 설명 등에 사용)\r\n * @param {string} text - 원본 문자열\r\n * @param {number} maxLength - 최대 길이\r\n * @returns {string} 잘린 문자열\r\n */\nexport const truncateText = (text, maxLength = 100) => {\n  if (!text) return '';\n  if (text.length <= maxLength) return text;\n  return text.slice(0, maxLength) + '...';\n};\n\n/**\r\n * 주문 상태를 한글로 변환\r\n * @param {string} status - 주문 상태 코드\r\n * @returns {string} 한글 상태명\r\n */\nexport const translateOrderStatus = status => {\n  const statusMap = {\n    'pending': '결제 대기',\n    'paid': '결제 완료',\n    'shipping': '배송 중',\n    'delivered': '배송 완료',\n    'cancelled': '주문 취소'\n  };\n  return statusMap[status] || status;\n};\n\n/**\r\n * 결제 방법을 한글로 변환\r\n * @param {string} method - 결제 방법 코드\r\n * @returns {string} 한글 결제 방법명\r\n */\nexport const translatePaymentMethod = method => {\n  const methodMap = {\n    'card': '신용카드',\n    'bank_transfer': '계좌이체',\n    'mobile': '휴대폰 결제',\n    'virtual_account': '가상계좌'\n  };\n  return methodMap[method] || method;\n};","map":{"version":3,"names":["formatCurrency","amount","undefined","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","dateString","date","Date","DateTimeFormat","year","month","day","hour","minute","truncateText","text","maxLength","length","slice","translateOrderStatus","status","statusMap","translatePaymentMethod","method","methodMap"],"sources":["C:/Users/COM-LM/Documents/ShopEase/frontend/src/utils/formatters.js"],"sourcesContent":["/**\r\n * 숫자를 한국 원화 형식으로 포맷\r\n * @param {number} amount - 포맷할 금액\r\n * @returns {string} 포맷된 금액 문자열\r\n */\r\nexport const formatCurrency = (amount) => {\r\n    if (amount === null || amount === undefined) return '₩0';\r\n    \r\n    return new Intl.NumberFormat('ko-KR', {\r\n      style: 'currency',\r\n      currency: 'KRW',\r\n      minimumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n  \r\n  /**\r\n   * ISO 날짜 문자열을 한국 형식으로 포맷\r\n   * @param {string} dateString - ISO 형식의 날짜 문자열\r\n   * @returns {string} 포맷된 날짜 문자열\r\n   */\r\n  export const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    \r\n    const date = new Date(dateString);\r\n    \r\n    return new Intl.DateTimeFormat('ko-KR', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }).format(date);\r\n  };\r\n  \r\n  /**\r\n   * 문자열을 지정된 길이로 잘라서 반환 (긴 설명 등에 사용)\r\n   * @param {string} text - 원본 문자열\r\n   * @param {number} maxLength - 최대 길이\r\n   * @returns {string} 잘린 문자열\r\n   */\r\n  export const truncateText = (text, maxLength = 100) => {\r\n    if (!text) return '';\r\n    if (text.length <= maxLength) return text;\r\n    \r\n    return text.slice(0, maxLength) + '...';\r\n  };\r\n  \r\n  /**\r\n   * 주문 상태를 한글로 변환\r\n   * @param {string} status - 주문 상태 코드\r\n   * @returns {string} 한글 상태명\r\n   */\r\n  export const translateOrderStatus = (status) => {\r\n    const statusMap = {\r\n      'pending': '결제 대기',\r\n      'paid': '결제 완료',\r\n      'shipping': '배송 중',\r\n      'delivered': '배송 완료',\r\n      'cancelled': '주문 취소'\r\n    };\r\n    \r\n    return statusMap[status] || status;\r\n  };\r\n  \r\n  /**\r\n   * 결제 방법을 한글로 변환\r\n   * @param {string} method - 결제 방법 코드\r\n   * @returns {string} 한글 결제 방법명\r\n   */\r\n  export const translatePaymentMethod = (method) => {\r\n    const methodMap = {\r\n      'card': '신용카드',\r\n      'bank_transfer': '계좌이체',\r\n      'mobile': '휴대폰 결제',\r\n      'virtual_account': '가상계좌'\r\n    };\r\n    \r\n    return methodMap[method] || method;\r\n  };"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,GAAIC,MAAM,IAAK;EACtC,IAAIA,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKC,SAAS,EAAE,OAAO,IAAI;EAExD,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IACpCC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,KAAK;IACfC,qBAAqB,EAAE;EACzB,CAAC,CAAC,CAACC,MAAM,CAACP,MAAM,CAAC;AACnB,CAAC;;AAED;AACF;AACA;AACA;AACA;AACE,OAAO,MAAMQ,UAAU,GAAIC,UAAU,IAAK;EACxC,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;EAE1B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EAEjC,OAAO,IAAIP,IAAI,CAACU,cAAc,CAAC,OAAO,EAAE;IACtCC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC,CAAC,CAACV,MAAM,CAACG,IAAI,CAAC;AACjB,CAAC;;AAED;AACF;AACA;AACA;AACA;AACA;AACE,OAAO,MAAMQ,YAAY,GAAGA,CAACC,IAAI,EAAEC,SAAS,GAAG,GAAG,KAAK;EACrD,IAAI,CAACD,IAAI,EAAE,OAAO,EAAE;EACpB,IAAIA,IAAI,CAACE,MAAM,IAAID,SAAS,EAAE,OAAOD,IAAI;EAEzC,OAAOA,IAAI,CAACG,KAAK,CAAC,CAAC,EAAEF,SAAS,CAAC,GAAG,KAAK;AACzC,CAAC;;AAED;AACF;AACA;AACA;AACA;AACE,OAAO,MAAMG,oBAAoB,GAAIC,MAAM,IAAK;EAC9C,MAAMC,SAAS,GAAG;IAChB,SAAS,EAAE,OAAO;IAClB,MAAM,EAAE,OAAO;IACf,UAAU,EAAE,MAAM;IAClB,WAAW,EAAE,OAAO;IACpB,WAAW,EAAE;EACf,CAAC;EAED,OAAOA,SAAS,CAACD,MAAM,CAAC,IAAIA,MAAM;AACpC,CAAC;;AAED;AACF;AACA;AACA;AACA;AACE,OAAO,MAAME,sBAAsB,GAAIC,MAAM,IAAK;EAChD,MAAMC,SAAS,GAAG;IAChB,MAAM,EAAE,MAAM;IACd,eAAe,EAAE,MAAM;IACvB,QAAQ,EAAE,QAAQ;IAClB,iBAAiB,EAAE;EACrB,CAAC;EAED,OAAOA,SAAS,CAACD,MAAM,CAAC,IAAIA,MAAM;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}