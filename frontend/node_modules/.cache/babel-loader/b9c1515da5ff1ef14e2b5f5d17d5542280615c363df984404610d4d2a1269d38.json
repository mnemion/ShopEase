{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\COM-LM\\\\Documents\\\\ShopEase\\\\frontend\\\\src\\\\pages\\\\SocialLoginCallback.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { sendCodeToBackend } from '../api/auth';\nimport Loading from '../components/ui/Loading';\nimport { toast } from 'react-toastify';\n\n/**\n * 소셜 로그인 콜백 처리 컴포넌트\n * URL 파라미터로 전달된 토큰을 처리 (팝업 방식이 실패할 경우 대체 방안)\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocialLoginCallback = () => {\n  _s();\n  const {\n    provider\n  } = useParams(); // /login/callback/:provider\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    login: authLogin\n  } = useAuth();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const handleCallback = async () => {\n      const searchParams = new URLSearchParams(location.search);\n      const code = searchParams.get('code');\n      const state = searchParams.get('state');\n      const errorParam = searchParams.get('error');\n      const errorDescription = searchParams.get('error_description');\n      if (errorParam) {\n        setError(`로그인 중 오류 발생: ${errorDescription || errorParam}`);\n        toast.error(`로그인 중 오류 발생: ${errorDescription || errorParam}`);\n        setIsLoading(false);\n        return;\n      }\n      if (!code) {\n        setError('로그인 인증 코드를 받지 못했습니다.');\n        toast.error('로그인 인증 코드를 받지 못했습니다.');\n        setIsLoading(false);\n        return;\n      }\n\n      // state 파라미터 검증 (CSRF 방지)\n      const storedState = sessionStorage.getItem('oauth_state');\n      if (!state || state !== storedState) {\n        sessionStorage.removeItem('oauth_state');\n        setError('로그인 요청이 유효하지 않습니다 (state 불일치).');\n        toast.error('로그인 요청이 유효하지 않습니다.');\n        setIsLoading(false);\n        return;\n      }\n      sessionStorage.removeItem('oauth_state');\n      try {\n        const {\n          access,\n          refresh,\n          user\n        } = await sendCodeToBackend(provider, code);\n        if (access && refresh && user) {\n          authLogin(access, refresh, user);\n          toast.success(`${user.name || user.email || '사용자'}님, 환영합니다!`);\n          navigate('/', {\n            replace: true\n          });\n        } else {\n          throw new Error('백엔드로부터 유효한 토큰 또는 사용자 정보를 받지 못했습니다.');\n        }\n      } catch (err) {\n        setError('로그인 처리 중 오류가 발생했습니다.');\n        toast.error('로그인 처리 중 오류가 발생했습니다.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleCallback();\n  }, [provider, location.search, navigate, authLogin]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      text: \"\\uB85C\\uADF8\\uC778 \\uCC98\\uB9AC \\uC911...\",\n      fullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/login'),\n        className: \"text-indigo-600 hover:underline\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_s(SocialLoginCallback, \"ss9/fgicaAdUryu2zK0Wv5ZZTyA=\", false, function () {\n  return [useParams, useLocation, useNavigate, useAuth];\n});\n_c = SocialLoginCallback;\nexport default SocialLoginCallback;\nvar _c;\n$RefreshReg$(_c, \"SocialLoginCallback\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useLocation","useAuth","sendCodeToBackend","Loading","toast","jsxDEV","_jsxDEV","SocialLoginCallback","_s","provider","location","navigate","login","authLogin","error","setError","isLoading","setIsLoading","handleCallback","searchParams","URLSearchParams","search","code","get","state","errorParam","errorDescription","storedState","sessionStorage","getItem","removeItem","access","refresh","user","success","name","email","replace","Error","err","text","fullScreen","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","_c","$RefreshReg$"],"sources":["C:/Users/COM-LM/Documents/ShopEase/frontend/src/pages/SocialLoginCallback.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { sendCodeToBackend } from '../api/auth';\nimport Loading from '../components/ui/Loading';\nimport { toast } from 'react-toastify';\n\n/**\n * 소셜 로그인 콜백 처리 컴포넌트\n * URL 파라미터로 전달된 토큰을 처리 (팝업 방식이 실패할 경우 대체 방안)\n */\nconst SocialLoginCallback = () => {\n  const { provider } = useParams(); // /login/callback/:provider\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { login: authLogin } = useAuth();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const handleCallback = async () => {\n      const searchParams = new URLSearchParams(location.search);\n      const code = searchParams.get('code');\n      const state = searchParams.get('state');\n      const errorParam = searchParams.get('error');\n      const errorDescription = searchParams.get('error_description');\n\n      if (errorParam) {\n        setError(`로그인 중 오류 발생: ${errorDescription || errorParam}`);\n        toast.error(`로그인 중 오류 발생: ${errorDescription || errorParam}`);\n        setIsLoading(false);\n        return;\n      }\n\n      if (!code) {\n        setError('로그인 인증 코드를 받지 못했습니다.');\n        toast.error('로그인 인증 코드를 받지 못했습니다.');\n        setIsLoading(false);\n        return;\n      }\n\n      // state 파라미터 검증 (CSRF 방지)\n      const storedState = sessionStorage.getItem('oauth_state');\n      if (!state || state !== storedState) {\n        sessionStorage.removeItem('oauth_state');\n        setError('로그인 요청이 유효하지 않습니다 (state 불일치).');\n        toast.error('로그인 요청이 유효하지 않습니다.');\n        setIsLoading(false);\n        return;\n      }\n      sessionStorage.removeItem('oauth_state');\n\n      try {\n        const { access, refresh, user } = await sendCodeToBackend(provider, code);\n        if (access && refresh && user) {\n          authLogin(access, refresh, user);\n          toast.success(`${user.name || user.email || '사용자'}님, 환영합니다!`);\n          navigate('/', { replace: true });\n        } else {\n          throw new Error('백엔드로부터 유효한 토큰 또는 사용자 정보를 받지 못했습니다.');\n        }\n      } catch (err) {\n        setError('로그인 처리 중 오류가 발생했습니다.');\n        toast.error('로그인 처리 중 오류가 발생했습니다.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleCallback();\n  }, [provider, location.search, navigate, authLogin]);\n\n  if (isLoading) {\n    return <Loading text=\"로그인 처리 중...\" fullScreen />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-screen\">\n        <p className=\"text-red-600 mb-4\">{error}</p>\n        <button onClick={() => navigate('/login')} className=\"text-indigo-600 hover:underline\">\n          로그인 페이지로 돌아가기\n        </button>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default SocialLoginCallback;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}