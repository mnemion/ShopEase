{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\COM-LM\\\\Documents\\\\ShopEase\\\\frontend\\\\src\\\\pages\\\\SocialLoginCallback.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { handleSocialLoginCallback } from '../api/auth';\nimport { toast } from 'react-toastify';\nimport Loading from '../components/ui/Loading';\n\n/**\r\n * 소셜 로그인 콜백 처리 컴포넌트\r\n * URL 파라미터로 전달된 토큰을 처리 (팝업 방식이 실패할 경우 대체 방안)\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocialLoginCallback = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const processTokens = async () => {\n      try {\n        // URL 쿼리 파라미터에서 토큰 추출\n        const searchParams = new URLSearchParams(location.search);\n        const access_token = searchParams.get('access_token');\n        const refresh_token = searchParams.get('refresh_token');\n        if (!access_token || !refresh_token) {\n          toast.error('로그인 정보가 올바르지 않습니다.');\n          navigate('/login', {\n            replace: true\n          });\n          return;\n        }\n\n        // 토큰으로 사용자 정보 처리\n        const result = await handleSocialLoginCallback({\n          access_token,\n          refresh_token\n        });\n\n        // 로그인 상태 업데이트\n        login(result.access, result.refresh, result.user);\n\n        // 성공 메시지\n        toast.success('소셜 로그인에 성공했습니다!');\n\n        // 홈으로 리다이렉트\n        navigate('/', {\n          replace: true\n        });\n      } catch (error) {\n        console.error('소셜 로그인 콜백 처리 중 오류:', error);\n        toast.error('소셜 로그인 처리 중 오류가 발생했습니다.');\n        navigate('/login', {\n          replace: true\n        });\n      }\n    };\n    processTokens();\n  }, [location, login, navigate]);\n\n  // 처리 중 로딩 표시\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-lg text-gray-600\",\n      children: \"\\uC18C\\uC15C \\uB85C\\uADF8\\uC778 \\uCC98\\uB9AC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SocialLoginCallback, \"i5QvZTln2+NeKozofzY8DTOLQ9I=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = SocialLoginCallback;\nexport default SocialLoginCallback;\nvar _c;\n$RefreshReg$(_c, \"SocialLoginCallback\");","map":{"version":3,"names":["React","useEffect","useNavigate","useLocation","useAuth","handleSocialLoginCallback","toast","Loading","jsxDEV","_jsxDEV","SocialLoginCallback","_s","login","navigate","location","processTokens","searchParams","URLSearchParams","search","access_token","get","refresh_token","error","replace","result","access","refresh","user","success","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/COM-LM/Documents/ShopEase/frontend/src/pages/SocialLoginCallback.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { handleSocialLoginCallback } from '../api/auth';\r\nimport { toast } from 'react-toastify';\r\nimport Loading from '../components/ui/Loading';\r\n\r\n/**\r\n * 소셜 로그인 콜백 처리 컴포넌트\r\n * URL 파라미터로 전달된 토큰을 처리 (팝업 방식이 실패할 경우 대체 방안)\r\n */\r\nconst SocialLoginCallback = () => {\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const processTokens = async () => {\r\n      try {\r\n        // URL 쿼리 파라미터에서 토큰 추출\r\n        const searchParams = new URLSearchParams(location.search);\r\n        const access_token = searchParams.get('access_token');\r\n        const refresh_token = searchParams.get('refresh_token');\r\n\r\n        if (!access_token || !refresh_token) {\r\n          toast.error('로그인 정보가 올바르지 않습니다.');\r\n          navigate('/login', { replace: true });\r\n          return;\r\n        }\r\n\r\n        // 토큰으로 사용자 정보 처리\r\n        const result = await handleSocialLoginCallback({\r\n          access_token,\r\n          refresh_token\r\n        });\r\n\r\n        // 로그인 상태 업데이트\r\n        login(result.access, result.refresh, result.user);\r\n        \r\n        // 성공 메시지\r\n        toast.success('소셜 로그인에 성공했습니다!');\r\n        \r\n        // 홈으로 리다이렉트\r\n        navigate('/', { replace: true });\r\n      } catch (error) {\r\n        console.error('소셜 로그인 콜백 처리 중 오류:', error);\r\n        toast.error('소셜 로그인 처리 중 오류가 발생했습니다.');\r\n        navigate('/login', { replace: true });\r\n      }\r\n    };\r\n\r\n    processTokens();\r\n  }, [location, login, navigate]);\r\n\r\n  // 처리 중 로딩 표시\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen\">\r\n      <Loading />\r\n      <p className=\"mt-4 text-lg text-gray-600\">소셜 로그인 처리 중입니다...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialLoginCallback;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,yBAAyB,QAAQ,aAAa;AACvD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,OAAO,MAAM,0BAA0B;;AAE9C;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAM,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC3B,MAAMS,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;QACzD,MAAMC,YAAY,GAAGH,YAAY,CAACI,GAAG,CAAC,cAAc,CAAC;QACrD,MAAMC,aAAa,GAAGL,YAAY,CAACI,GAAG,CAAC,eAAe,CAAC;QAEvD,IAAI,CAACD,YAAY,IAAI,CAACE,aAAa,EAAE;UACnCf,KAAK,CAACgB,KAAK,CAAC,oBAAoB,CAAC;UACjCT,QAAQ,CAAC,QAAQ,EAAE;YAAEU,OAAO,EAAE;UAAK,CAAC,CAAC;UACrC;QACF;;QAEA;QACA,MAAMC,MAAM,GAAG,MAAMnB,yBAAyB,CAAC;UAC7Cc,YAAY;UACZE;QACF,CAAC,CAAC;;QAEF;QACAT,KAAK,CAACY,MAAM,CAACC,MAAM,EAAED,MAAM,CAACE,OAAO,EAAEF,MAAM,CAACG,IAAI,CAAC;;QAEjD;QACArB,KAAK,CAACsB,OAAO,CAAC,iBAAiB,CAAC;;QAEhC;QACAf,QAAQ,CAAC,GAAG,EAAE;UAAEU,OAAO,EAAE;QAAK,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1ChB,KAAK,CAACgB,KAAK,CAAC,yBAAyB,CAAC;QACtCT,QAAQ,CAAC,QAAQ,EAAE;UAAEU,OAAO,EAAE;QAAK,CAAC,CAAC;MACvC;IACF,CAAC;IAEDR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACD,QAAQ,EAAEF,KAAK,EAAEC,QAAQ,CAAC,CAAC;;EAE/B;EACA,oBACEJ,OAAA;IAAKqB,SAAS,EAAC,oDAAoD;IAAAC,QAAA,gBACjEtB,OAAA,CAACF,OAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACX1B,OAAA;MAAGqB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACxB,EAAA,CAlDID,mBAAmB;EAAA,QACLN,OAAO,EACRF,WAAW,EACXC,WAAW;AAAA;AAAAiC,EAAA,GAHxB1B,mBAAmB;AAoDzB,eAAeA,mBAAmB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}