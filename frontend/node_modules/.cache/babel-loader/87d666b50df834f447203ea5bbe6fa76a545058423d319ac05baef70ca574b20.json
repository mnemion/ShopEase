{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\COM-LM\\\\Documents\\\\ShopEase\\\\frontend\\\\src\\\\pages\\\\SocialLoginCallback.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { handleSocialLoginCallback } from '../api/auth';\nimport { toast } from 'react-toastify';\nimport Loading from '../components/ui/Loading';\nimport apiClient from '../api/client';\n\n/**\r\n * 소셜 로그인 콜백 처리 컴포넌트\r\n * URL 파라미터로 전달된 토큰을 처리 (팝업 방식이 실패할 경우 대체 방안)\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocialLoginCallback = () => {\n  _s();\n  const {\n    login,\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [debugInfo, setDebugInfo] = useState({\n    status: '초기화 중...',\n    tokens: {\n      access: false,\n      refresh: false\n    },\n    error: null\n  });\n\n  // 디버깅 로그 함수\n  const debug = message => {\n    console.log(\"[SocialLoginCallback]\", message);\n    return message; // 로깅 후 메시지 반환 (상태 업데이트용)\n  };\n  useEffect(() => {\n    const status = debug(\"컴포넌트 마운트\");\n    debug(`현재 URL: ${location.pathname}${location.search}`);\n\n    // 이미 인증되었으면 홈으로 리디렉션\n    if (isAuthenticated) {\n      debug(\"이미 인증됨, 홈으로 리디렉션\");\n      setDebugInfo(prev => ({\n        ...prev,\n        status: \"이미 인증됨, 홈으로 리디렉션\"\n      }));\n      navigate('/', {\n        replace: true\n      });\n      return;\n    }\n    const processTokens = async () => {\n      try {\n        var _result$user3;\n        setDebugInfo(prev => ({\n          ...prev,\n          status: \"토큰 처리 시작\"\n        }));\n\n        // URL 쿼리 파라미터에서 토큰 추출\n        const searchParams = new URLSearchParams(location.search);\n        const access_token = searchParams.get('access_token');\n        const refresh_token = searchParams.get('refresh_token');\n        debug(`토큰 존재 여부 - 액세스: ${Boolean(access_token)}, 리프레시: ${Boolean(refresh_token)}`);\n        setDebugInfo(prev => ({\n          ...prev,\n          status: \"URL에서 토큰 확인 완료\",\n          tokens: {\n            access: Boolean(access_token),\n            refresh: Boolean(refresh_token),\n            accessPrefix: access_token ? access_token.substring(0, 10) + '...' : '없음',\n            refreshPrefix: refresh_token ? refresh_token.substring(0, 10) + '...' : '없음'\n          }\n        }));\n\n        // 로컬 스토리지 확인\n        const storedAccessToken = localStorage.getItem('access_token');\n        const storedRefreshToken = localStorage.getItem('refresh_token');\n        const timestamp = localStorage.getItem('social_login_timestamp');\n        debug(`로컬 스토리지 토큰 존재 여부 - 액세스: ${Boolean(storedAccessToken)}, 리프레시: ${Boolean(storedRefreshToken)}, 타임스탬프: ${timestamp}`);\n        setDebugInfo(prev => ({\n          ...prev,\n          status: \"로컬 스토리지 확인 완료\",\n          localStorage: {\n            access: Boolean(storedAccessToken),\n            refresh: Boolean(storedRefreshToken),\n            timestamp: timestamp\n          }\n        }));\n\n        // URL의 토큰 또는 로컬 스토리지의 토큰 사용\n        const finalAccessToken = access_token || storedAccessToken;\n        const finalRefreshToken = refresh_token || storedRefreshToken;\n        if (!finalAccessToken || !finalRefreshToken) {\n          const errorMsg = debug(\"URL 및 로컬 스토리지 모두에서 토큰을 찾을 수 없음\");\n          setDebugInfo(prev => ({\n            ...prev,\n            status: \"토큰 없음, 로그인 페이지로 이동\",\n            error: errorMsg\n          }));\n          toast.error('로그인 정보를 찾을 수 없습니다.');\n\n          // 3초 후에 리디렉트\n          setTimeout(() => {\n            navigate('/login', {\n              replace: true\n            });\n          }, 3000);\n          return;\n        }\n        debug(\"토큰으로 사용자 정보 요청 시작\");\n        setDebugInfo(prev => ({\n          ...prev,\n          status: \"API 요청 준비 중\"\n        }));\n\n        // API 헤더 설정\n        apiClient.defaults.headers.common['Authorization'] = `Bearer ${finalAccessToken}`;\n        setDebugInfo(prev => ({\n          ...prev,\n          status: \"API 헤더 설정 완료\"\n        }));\n\n        // 토큰으로 사용자 정보 처리\n        const result = await handleSocialLoginCallback({\n          access_token: finalAccessToken,\n          refresh_token: finalRefreshToken\n        });\n        setDebugInfo(prev => {\n          var _result$user, _result$user2;\n          return {\n            ...prev,\n            status: \"사용자 정보 수신 성공\",\n            user: {\n              id: (_result$user = result.user) === null || _result$user === void 0 ? void 0 : _result$user.id,\n              email: ((_result$user2 = result.user) === null || _result$user2 === void 0 ? void 0 : _result$user2.email) || '이메일 없음'\n            }\n          };\n        });\n        debug(`사용자 정보 수신 성공: ${((_result$user3 = result.user) === null || _result$user3 === void 0 ? void 0 : _result$user3.email) || '이메일 없음'}`);\n\n        // 성공 메시지\n        toast.success('소셜 로그인에 성공했습니다!');\n\n        // 로그인 상태 업데이트\n        login(result.access, result.refresh, result.user);\n        debug(\"로그인 상태 업데이트 완료\");\n        setDebugInfo(prev => ({\n          ...prev,\n          status: \"로그인 완료, 홈으로 이동\"\n        }));\n\n        // 타임스탬프 제거\n        localStorage.removeItem('social_login_timestamp');\n\n        // 홈으로 리다이렉트\n        debug(\"홈으로 리다이렉트\");\n        setTimeout(() => {\n          navigate('/', {\n            replace: true\n          });\n        }, 1000);\n      } catch (error) {\n        console.error('소셜 로그인 콜백 처리 중 오류:', error);\n        const errorMsg = debug(`오류 세부 정보: ${error.message}`);\n        let errorDetails = {\n          message: error.message\n        };\n        if (error.response) {\n          debug(`서버 응답: ${error.response.status} - ${JSON.stringify(error.response.data || {})}`);\n          errorDetails.response = {\n            status: error.response.status,\n            data: error.response.data\n          };\n        }\n        setDebugInfo(prev => ({\n          ...prev,\n          status: \"오류 발생\",\n          error: errorMsg,\n          errorDetails: errorDetails\n        }));\n        toast.error('소셜 로그인 처리 중 오류가 발생했습니다.');\n\n        // 토큰 삭제\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('social_login_timestamp');\n\n        // 3초 후에 리디렉트\n        setTimeout(() => {\n          navigate('/login', {\n            replace: true\n          });\n        }, 3000);\n      }\n    };\n    processTokens();\n  }, [location, login, navigate, isAuthenticated]);\n\n  // 처리 중 로딩 표시\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-lg text-gray-600\",\n      children: \"\\uC18C\\uC15C \\uB85C\\uADF8\\uC778 \\uCC98\\uB9AC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-500 mt-2\",\n      children: [\"\\uC0C1\\uD0DC: \", debugInfo.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-gray-400 mt-2\",\n      children: [\"URL: \", location.pathname, location.search]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 w-full max-w-md p-4 bg-gray-50 rounded-lg border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-700 mb-2\",\n        children: \"\\uB514\\uBC84\\uADF8 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"text-xs bg-gray-100 p-2 rounded overflow-auto max-h-32\",\n        children: JSON.stringify(debugInfo, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(SocialLoginCallback, \"v33a9hbcLaunXfVDW0v0LajctIY=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = SocialLoginCallback;\nexport default SocialLoginCallback;\nvar _c;\n$RefreshReg$(_c, \"SocialLoginCallback\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","useAuth","handleSocialLoginCallback","toast","Loading","apiClient","jsxDEV","_jsxDEV","SocialLoginCallback","_s","login","isAuthenticated","navigate","location","debugInfo","setDebugInfo","status","tokens","access","refresh","error","debug","message","console","log","pathname","search","prev","replace","processTokens","_result$user3","searchParams","URLSearchParams","access_token","get","refresh_token","Boolean","accessPrefix","substring","refreshPrefix","storedAccessToken","localStorage","getItem","storedRefreshToken","timestamp","finalAccessToken","finalRefreshToken","errorMsg","setTimeout","defaults","headers","common","result","_result$user","_result$user2","user","id","email","success","removeItem","errorDetails","response","JSON","stringify","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/COM-LM/Documents/ShopEase/frontend/src/pages/SocialLoginCallback.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { handleSocialLoginCallback } from '../api/auth';\r\nimport { toast } from 'react-toastify';\r\nimport Loading from '../components/ui/Loading';\r\nimport apiClient from '../api/client';\r\n\r\n/**\r\n * 소셜 로그인 콜백 처리 컴포넌트\r\n * URL 파라미터로 전달된 토큰을 처리 (팝업 방식이 실패할 경우 대체 방안)\r\n */\r\nconst SocialLoginCallback = () => {\r\n  const { login, isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [debugInfo, setDebugInfo] = useState({\r\n    status: '초기화 중...',\r\n    tokens: { access: false, refresh: false },\r\n    error: null\r\n  });\r\n\r\n  // 디버깅 로그 함수\r\n  const debug = (message) => {\r\n    console.log(\"[SocialLoginCallback]\", message);\r\n    return message; // 로깅 후 메시지 반환 (상태 업데이트용)\r\n  };\r\n\r\n  useEffect(() => {\r\n    const status = debug(\"컴포넌트 마운트\");\r\n    debug(`현재 URL: ${location.pathname}${location.search}`);\r\n    \r\n    // 이미 인증되었으면 홈으로 리디렉션\r\n    if (isAuthenticated) {\r\n      debug(\"이미 인증됨, 홈으로 리디렉션\");\r\n      setDebugInfo(prev => ({ ...prev, status: \"이미 인증됨, 홈으로 리디렉션\" }));\r\n      navigate('/', { replace: true });\r\n      return;\r\n    }\r\n\r\n    const processTokens = async () => {\r\n      try {\r\n        setDebugInfo(prev => ({ ...prev, status: \"토큰 처리 시작\" }));\r\n        \r\n        // URL 쿼리 파라미터에서 토큰 추출\r\n        const searchParams = new URLSearchParams(location.search);\r\n        const access_token = searchParams.get('access_token');\r\n        const refresh_token = searchParams.get('refresh_token');\r\n\r\n        debug(`토큰 존재 여부 - 액세스: ${Boolean(access_token)}, 리프레시: ${Boolean(refresh_token)}`);\r\n        setDebugInfo(prev => ({ \r\n          ...prev, \r\n          status: \"URL에서 토큰 확인 완료\",\r\n          tokens: { \r\n            access: Boolean(access_token), \r\n            refresh: Boolean(refresh_token),\r\n            accessPrefix: access_token ? access_token.substring(0, 10) + '...' : '없음',\r\n            refreshPrefix: refresh_token ? refresh_token.substring(0, 10) + '...' : '없음'\r\n          }\r\n        }));\r\n\r\n        // 로컬 스토리지 확인\r\n        const storedAccessToken = localStorage.getItem('access_token');\r\n        const storedRefreshToken = localStorage.getItem('refresh_token');\r\n        const timestamp = localStorage.getItem('social_login_timestamp');\r\n        \r\n        debug(`로컬 스토리지 토큰 존재 여부 - 액세스: ${Boolean(storedAccessToken)}, 리프레시: ${Boolean(storedRefreshToken)}, 타임스탬프: ${timestamp}`);\r\n        setDebugInfo(prev => ({ \r\n          ...prev, \r\n          status: \"로컬 스토리지 확인 완료\",\r\n          localStorage: {\r\n            access: Boolean(storedAccessToken),\r\n            refresh: Boolean(storedRefreshToken),\r\n            timestamp: timestamp\r\n          }\r\n        }));\r\n\r\n        // URL의 토큰 또는 로컬 스토리지의 토큰 사용\r\n        const finalAccessToken = access_token || storedAccessToken;\r\n        const finalRefreshToken = refresh_token || storedRefreshToken;\r\n\r\n        if (!finalAccessToken || !finalRefreshToken) {\r\n          const errorMsg = debug(\"URL 및 로컬 스토리지 모두에서 토큰을 찾을 수 없음\");\r\n          setDebugInfo(prev => ({ \r\n            ...prev, \r\n            status: \"토큰 없음, 로그인 페이지로 이동\",\r\n            error: errorMsg\r\n          }));\r\n          toast.error('로그인 정보를 찾을 수 없습니다.');\r\n          \r\n          // 3초 후에 리디렉트\r\n          setTimeout(() => {\r\n            navigate('/login', { replace: true });\r\n          }, 3000);\r\n          return;\r\n        }\r\n\r\n        debug(\"토큰으로 사용자 정보 요청 시작\");\r\n        setDebugInfo(prev => ({ ...prev, status: \"API 요청 준비 중\" }));\r\n        \r\n        // API 헤더 설정\r\n        apiClient.defaults.headers.common['Authorization'] = `Bearer ${finalAccessToken}`;\r\n        setDebugInfo(prev => ({ ...prev, status: \"API 헤더 설정 완료\" }));\r\n        \r\n        // 토큰으로 사용자 정보 처리\r\n        const result = await handleSocialLoginCallback({\r\n          access_token: finalAccessToken,\r\n          refresh_token: finalRefreshToken\r\n        });\r\n        \r\n        setDebugInfo(prev => ({ \r\n          ...prev, \r\n          status: \"사용자 정보 수신 성공\",\r\n          user: {\r\n            id: result.user?.id,\r\n            email: result.user?.email || '이메일 없음'\r\n          }\r\n        }));\r\n        debug(`사용자 정보 수신 성공: ${result.user?.email || '이메일 없음'}`);\r\n        \r\n        // 성공 메시지\r\n        toast.success('소셜 로그인에 성공했습니다!');\r\n        \r\n        // 로그인 상태 업데이트\r\n        login(result.access, result.refresh, result.user);\r\n        debug(\"로그인 상태 업데이트 완료\");\r\n        setDebugInfo(prev => ({ ...prev, status: \"로그인 완료, 홈으로 이동\" }));\r\n        \r\n        // 타임스탬프 제거\r\n        localStorage.removeItem('social_login_timestamp');\r\n        \r\n        // 홈으로 리다이렉트\r\n        debug(\"홈으로 리다이렉트\");\r\n        setTimeout(() => {\r\n          navigate('/', { replace: true });\r\n        }, 1000);\r\n      } catch (error) {\r\n        console.error('소셜 로그인 콜백 처리 중 오류:', error);\r\n        const errorMsg = debug(`오류 세부 정보: ${error.message}`);\r\n        \r\n        let errorDetails = { message: error.message };\r\n        \r\n        if (error.response) {\r\n          debug(`서버 응답: ${error.response.status} - ${JSON.stringify(error.response.data || {})}`);\r\n          errorDetails.response = {\r\n            status: error.response.status,\r\n            data: error.response.data\r\n          };\r\n        }\r\n        \r\n        setDebugInfo(prev => ({ \r\n          ...prev, \r\n          status: \"오류 발생\", \r\n          error: errorMsg,\r\n          errorDetails: errorDetails\r\n        }));\r\n        \r\n        toast.error('소셜 로그인 처리 중 오류가 발생했습니다.');\r\n        \r\n        // 토큰 삭제\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('refresh_token');\r\n        localStorage.removeItem('social_login_timestamp');\r\n        \r\n        // 3초 후에 리디렉트\r\n        setTimeout(() => {\r\n          navigate('/login', { replace: true });\r\n        }, 3000);\r\n      }\r\n    };\r\n\r\n    processTokens();\r\n  }, [location, login, navigate, isAuthenticated]);\r\n\r\n  // 처리 중 로딩 표시\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4\">\r\n      <Loading />\r\n      <p className=\"mt-4 text-lg text-gray-600\">소셜 로그인 처리 중입니다...</p>\r\n      <p className=\"text-sm text-gray-500 mt-2\">상태: {debugInfo.status}</p>\r\n      <small className=\"text-gray-400 mt-2\">URL: {location.pathname}{location.search}</small>\r\n      \r\n      {/* 디버그 정보 표시 */}\r\n      <div className=\"mt-6 w-full max-w-md p-4 bg-gray-50 rounded-lg border border-gray-200\">\r\n        <h3 className=\"text-sm font-medium text-gray-700 mb-2\">디버그 정보</h3>\r\n        <pre className=\"text-xs bg-gray-100 p-2 rounded overflow-auto max-h-32\">\r\n          {JSON.stringify(debugInfo, null, 2)}\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialLoginCallback;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}