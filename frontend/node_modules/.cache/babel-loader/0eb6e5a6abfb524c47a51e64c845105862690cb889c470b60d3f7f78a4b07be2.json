{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';/**\r\n * 기본 버튼 컴포넌트 - 일반 버튼 및 링크 버튼으로 사용 가능\r\n * \r\n * @param {Object} props\r\n * @param {ReactNode} props.children - 버튼 내용\r\n * @param {string} props.type - 버튼 타입 (button, submit, reset)\r\n * @param {string} props.variant - 버튼 스타일 (primary, secondary, danger 등)\r\n * @param {string} props.size - 버튼 크기 (small, medium, large)\r\n * @param {boolean} props.fullWidth - 전체 너비 적용 여부\r\n * @param {boolean} props.disabled - 비활성화 여부\r\n * @param {boolean} props.isLoading - 로딩 상태 여부\r\n * @param {string} props.to - 링크 경로 (있을 경우 Link 컴포넌트로 렌더링)\r\n * @param {string} props.href - 외부 링크 URL (있을 경우 a 태그로 렌더링)\r\n * @param {function} props.onClick - 클릭 핸들러\r\n * @param {string} props.className - 추가 CSS 클래스\r\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Button=_ref=>{let{children,type='button',variant='primary',size='medium',fullWidth=false,disabled=false,isLoading=false,to,href,onClick,className='',icon,iconPosition='left',rounded=false,...rest}=_ref;// 버튼 크기 클래스\nconst sizeClasses={small:'px-2 py-1 text-xs',medium:'px-4 py-2 text-sm',large:'px-6 py-3 text-base'};// 버튼 변형 클래스\nconst variantClasses={primary:'bg-indigo-600 text-white hover:bg-indigo-700 focus:ring-indigo-500',secondary:'bg-gray-100 text-gray-700 hover:bg-gray-200 focus:ring-gray-500',success:'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500',danger:'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',warning:'bg-yellow-500 text-white hover:bg-yellow-600 focus:ring-yellow-500',info:'bg-blue-500 text-white hover:bg-blue-600 focus:ring-blue-500',light:'bg-gray-200 text-gray-700 hover:bg-gray-300 focus:ring-gray-400',dark:'bg-gray-800 text-white hover:bg-gray-900 focus:ring-gray-700',outline:'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 focus:ring-gray-500','outline-primary':'bg-white text-indigo-600 border border-indigo-600 hover:bg-indigo-50 focus:ring-indigo-500','outline-danger':'bg-white text-red-600 border border-red-600 hover:bg-red-50 focus:ring-red-500',link:'bg-transparent text-indigo-600 hover:text-indigo-800 hover:underline p-0 shadow-none'};// 로딩 상태일 때의 버튼 내용\nconst renderContent=()=>{const content=/*#__PURE__*/_jsxs(_Fragment,{children:[isLoading&&/*#__PURE__*/_jsxs(\"svg\",{className:\"animate-spin h-5 w-5 mr-2\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"opacity-25\",cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"4\"}),/*#__PURE__*/_jsx(\"path\",{className:\"opacity-75\",fill:\"currentColor\",d:\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"})]}),icon&&iconPosition==='left'&&!isLoading&&/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:icon}),/*#__PURE__*/_jsx(\"span\",{children:children}),icon&&iconPosition==='right'&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2\",children:icon})]});return content;};// 공통 클래스\nconst buttonClasses=`\n    inline-flex items-center justify-center\n    font-medium ${rounded?'rounded-full':'rounded-md'} \n    shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2\n    transition-colors duration-200\n    ${sizeClasses[size]}\n    ${variantClasses[variant]}\n    ${fullWidth?'w-full':''}\n    ${disabled||isLoading?'opacity-60 cursor-not-allowed':''}\n    ${className}\n  `;// Link 컴포넌트로 렌더링 (내부 라우팅)\nif(to&&!disabled){return/*#__PURE__*/_jsx(Link,{to:to,className:buttonClasses,...rest,children:renderContent()});}// a 태그로 렌더링 (외부 링크)\nif(href&&!disabled){return/*#__PURE__*/_jsx(\"a\",{href:href,className:buttonClasses,target:\"_blank\",rel:\"noopener noreferrer\",...rest,children:renderContent()});}// 기본 버튼으로 렌더링\nreturn/*#__PURE__*/_jsx(\"button\",{type:type,className:buttonClasses,disabled:disabled||isLoading,onClick:onClick,...rest,children:renderContent()});};export default Button;","map":{"version":3,"names":["React","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Button","_ref","children","type","variant","size","fullWidth","disabled","isLoading","to","href","onClick","className","icon","iconPosition","rounded","rest","sizeClasses","small","medium","large","variantClasses","primary","secondary","success","danger","warning","info","light","dark","outline","link","renderContent","content","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","buttonClasses","target","rel"],"sources":["C:/Users/COM-LM/Documents/ShopEase/frontend/src/components/ui/Button.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 기본 버튼 컴포넌트 - 일반 버튼 및 링크 버튼으로 사용 가능\r\n * \r\n * @param {Object} props\r\n * @param {ReactNode} props.children - 버튼 내용\r\n * @param {string} props.type - 버튼 타입 (button, submit, reset)\r\n * @param {string} props.variant - 버튼 스타일 (primary, secondary, danger 등)\r\n * @param {string} props.size - 버튼 크기 (small, medium, large)\r\n * @param {boolean} props.fullWidth - 전체 너비 적용 여부\r\n * @param {boolean} props.disabled - 비활성화 여부\r\n * @param {boolean} props.isLoading - 로딩 상태 여부\r\n * @param {string} props.to - 링크 경로 (있을 경우 Link 컴포넌트로 렌더링)\r\n * @param {string} props.href - 외부 링크 URL (있을 경우 a 태그로 렌더링)\r\n * @param {function} props.onClick - 클릭 핸들러\r\n * @param {string} props.className - 추가 CSS 클래스\r\n */\r\nconst Button = ({\r\n  children,\r\n  type = 'button',\r\n  variant = 'primary',\r\n  size = 'medium',\r\n  fullWidth = false,\r\n  disabled = false,\r\n  isLoading = false,\r\n  to,\r\n  href,\r\n  onClick,\r\n  className = '',\r\n  icon,\r\n  iconPosition = 'left',\r\n  rounded = false,\r\n  ...rest\r\n}) => {\r\n  // 버튼 크기 클래스\r\n  const sizeClasses = {\r\n    small: 'px-2 py-1 text-xs',\r\n    medium: 'px-4 py-2 text-sm',\r\n    large: 'px-6 py-3 text-base',\r\n  };\r\n\r\n  // 버튼 변형 클래스\r\n  const variantClasses = {\r\n    primary: 'bg-indigo-600 text-white hover:bg-indigo-700 focus:ring-indigo-500',\r\n    secondary: 'bg-gray-100 text-gray-700 hover:bg-gray-200 focus:ring-gray-500',\r\n    success: 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500',\r\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',\r\n    warning: 'bg-yellow-500 text-white hover:bg-yellow-600 focus:ring-yellow-500',\r\n    info: 'bg-blue-500 text-white hover:bg-blue-600 focus:ring-blue-500',\r\n    light: 'bg-gray-200 text-gray-700 hover:bg-gray-300 focus:ring-gray-400',\r\n    dark: 'bg-gray-800 text-white hover:bg-gray-900 focus:ring-gray-700',\r\n    outline: 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 focus:ring-gray-500',\r\n    'outline-primary': 'bg-white text-indigo-600 border border-indigo-600 hover:bg-indigo-50 focus:ring-indigo-500',\r\n    'outline-danger': 'bg-white text-red-600 border border-red-600 hover:bg-red-50 focus:ring-red-500',\r\n    link: 'bg-transparent text-indigo-600 hover:text-indigo-800 hover:underline p-0 shadow-none',\r\n  };\r\n\r\n  // 로딩 상태일 때의 버튼 내용\r\n  const renderContent = () => {\r\n    const content = (\r\n      <>\r\n        {isLoading && (\r\n          <svg className=\"animate-spin h-5 w-5 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n        )}\r\n        {icon && iconPosition === 'left' && !isLoading && (\r\n          <span className=\"mr-2\">{icon}</span>\r\n        )}\r\n        <span>{children}</span>\r\n        {icon && iconPosition === 'right' && (\r\n          <span className=\"ml-2\">{icon}</span>\r\n        )}\r\n      </>\r\n    );\r\n\r\n    return content;\r\n  };\r\n\r\n  // 공통 클래스\r\n  const buttonClasses = `\r\n    inline-flex items-center justify-center\r\n    font-medium ${rounded ? 'rounded-full' : 'rounded-md'} \r\n    shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2\r\n    transition-colors duration-200\r\n    ${sizeClasses[size]}\r\n    ${variantClasses[variant]}\r\n    ${fullWidth ? 'w-full' : ''}\r\n    ${disabled || isLoading ? 'opacity-60 cursor-not-allowed' : ''}\r\n    ${className}\r\n  `;\r\n\r\n  // Link 컴포넌트로 렌더링 (내부 라우팅)\r\n  if (to && !disabled) {\r\n    return (\r\n      <Link to={to} className={buttonClasses} {...rest}>\r\n        {renderContent()}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  // a 태그로 렌더링 (외부 링크)\r\n  if (href && !disabled) {\r\n    return (\r\n      <a href={href} className={buttonClasses} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\r\n        {renderContent()}\r\n      </a>\r\n    );\r\n  }\r\n\r\n  // 기본 버튼으로 렌더링\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={buttonClasses}\r\n      disabled={disabled || isLoading}\r\n      onClick={onClick}\r\n      {...rest}\r\n    >\r\n      {renderContent()}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}