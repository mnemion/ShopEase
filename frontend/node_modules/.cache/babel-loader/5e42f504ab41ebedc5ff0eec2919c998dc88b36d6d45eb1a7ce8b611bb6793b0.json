{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect,useCallback}from'react';import{getCartItems,getCartSummary,addToCart,updateCartItem,removeFromCart,clearCart}from'../api/cart';import{useAuth}from'./AuthContext';import{toast}from'react-toastify';// 장바구니 컨텍스트 생성\nimport{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();export const CartProvider=_ref=>{let{children}=_ref;const[cartItems,setCartItems]=useState([]);const[totalItems,setTotalItems]=useState(0);const[totalPrice,setTotalPrice]=useState(0);const[isLoading,setIsLoading]=useState(false);const{isAuthenticated}=useAuth();// 장바구니 정보 로드 (useCallback 적용)\nconst loadCart=useCallback(async()=>{if(!isAuthenticated)return;setIsLoading(true);try{// 장바구니 아이템 가져오기\nconst items=await getCartItems();setCartItems(items.results||[]);// 장바구니 요약 정보 가져오기\nconst summary=await getCartSummary();setTotalItems(summary.total_items);setTotalPrice(summary.total_price);}catch(error){console.error('장바구니 로드 실패:',error);toast.error('장바구니 정보를 불러오는데 실패했습니다.');}finally{setIsLoading(false);}},[isAuthenticated]);// 장바구니에 상품 추가 (useCallback 적용)\nconst addItemToCart=useCallback(async function(productId){let quantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!isAuthenticated){toast.warning('로그인이 필요합니다.');return false;}setIsLoading(true);try{await addToCart(productId,quantity);toast.success('상품이 장바구니에 추가되었습니다.');await loadCart();return true;}catch(error){console.error('장바구니 추가 실패:',error);if(error.response&&error.response.data){// 서버 오류 메시지 표시\nconst message=error.response.data.quantity||error.response.data.detail||'장바구니에 추가하지 못했습니다.';toast.error(message);}else{toast.error('장바구니에 추가하지 못했습니다.');}return false;}finally{setIsLoading(false);}},[isAuthenticated,loadCart]);// 장바구니 상품 수량 변경 (useCallback 적용)\nconst updateItemQuantity=useCallback(async(cartItemId,quantity)=>{if(quantity<1)return;setIsLoading(true);try{await updateCartItem(cartItemId,quantity);await loadCart();}catch(error){console.error('장바구니 수정 실패:',error);toast.error('수량을 변경하지 못했습니다.');}finally{setIsLoading(false);}},[loadCart]);// 장바구니에서 상품 제거 (useCallback 적용)\nconst removeItemFromCart=useCallback(async cartItemId=>{setIsLoading(true);try{await removeFromCart(cartItemId);toast.success('상품이 장바구니에서 제거되었습니다.');await loadCart();}catch(error){console.error('장바구니 제거 실패:',error);toast.error('상품을 제거하지 못했습니다.');}finally{setIsLoading(false);}},[loadCart]);// 장바구니 비우기 (useCallback 적용)\nconst emptyCart=useCallback(async()=>{setIsLoading(true);try{await clearCart();toast.success('장바구니가 비워졌습니다.');setCartItems([]);setTotalItems(0);setTotalPrice(0);}catch(error){console.error('장바구니 비우기 실패:',error);toast.error('장바구니를 비우지 못했습니다.');}finally{setIsLoading(false);}},[]);// 로그인 상태가 변경되면 장바구니 정보 로드\nuseEffect(()=>{if(isAuthenticated){loadCart();}else{setCartItems([]);setTotalItems(0);setTotalPrice(0);}},[isAuthenticated,loadCart]);// 컨텍스트에 제공할 값\nconst value={cartItems,totalItems,totalPrice,isLoading,loadCart,addItemToCart,updateItemQuantity,removeItemFromCart,emptyCart};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};// 장바구니 컨텍스트 사용을 위한 훅\nexport const useCart=()=>{const context=useContext(CartContext);if(!context){throw new Error('useCart는 CartProvider 내부에서만 사용할 수 있습니다.');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","getCartItems","getCartSummary","addToCart","updateCartItem","removeFromCart","clearCart","useAuth","toast","jsx","_jsx","CartContext","CartProvider","_ref","children","cartItems","setCartItems","totalItems","setTotalItems","totalPrice","setTotalPrice","isLoading","setIsLoading","isAuthenticated","loadCart","items","results","summary","total_items","total_price","error","console","addItemToCart","productId","quantity","arguments","length","undefined","warning","success","response","data","message","detail","updateItemQuantity","cartItemId","removeItemFromCart","emptyCart","value","Provider","useCart","context","Error"],"sources":["C:/Users/COM-LM/Documents/ShopEase/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { getCartItems, getCartSummary, addToCart, updateCartItem, removeFromCart, clearCart } from '../api/cart';\r\nimport { useAuth } from './AuthContext';\r\nimport { toast } from 'react-toastify';\r\n\r\n// 장바구니 컨텍스트 생성\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  // 장바구니 정보 로드 (useCallback 적용)\r\n  const loadCart = useCallback(async () => {\r\n    if (!isAuthenticated) return;\r\n    setIsLoading(true);\r\n    try {\r\n      // 장바구니 아이템 가져오기\r\n      const items = await getCartItems();\r\n      setCartItems(items.results || []);\r\n      \r\n      // 장바구니 요약 정보 가져오기\r\n      const summary = await getCartSummary();\r\n      setTotalItems(summary.total_items);\r\n      setTotalPrice(summary.total_price);\r\n    } catch (error) {\r\n      console.error('장바구니 로드 실패:', error);\r\n      toast.error('장바구니 정보를 불러오는데 실패했습니다.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // 장바구니에 상품 추가 (useCallback 적용)\r\n  const addItemToCart = useCallback(async (productId, quantity = 1) => {\r\n    if (!isAuthenticated) {\r\n      toast.warning('로그인이 필요합니다.');\r\n      return false;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      await addToCart(productId, quantity);\r\n      toast.success('상품이 장바구니에 추가되었습니다.');\r\n      await loadCart();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('장바구니 추가 실패:', error);\r\n      \r\n      if (error.response && error.response.data) {\r\n        // 서버 오류 메시지 표시\r\n        const message = error.response.data.quantity || error.response.data.detail || '장바구니에 추가하지 못했습니다.';\r\n        toast.error(message);\r\n      } else {\r\n        toast.error('장바구니에 추가하지 못했습니다.');\r\n      }\r\n      \r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [isAuthenticated, loadCart]);\r\n\r\n  // 장바구니 상품 수량 변경 (useCallback 적용)\r\n  const updateItemQuantity = useCallback(async (cartItemId, quantity) => {\r\n    if (quantity < 1) return;\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      await updateCartItem(cartItemId, quantity);\r\n      await loadCart();\r\n    } catch (error) {\r\n      console.error('장바구니 수정 실패:', error);\r\n      toast.error('수량을 변경하지 못했습니다.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [loadCart]);\r\n\r\n  // 장바구니에서 상품 제거 (useCallback 적용)\r\n  const removeItemFromCart = useCallback(async (cartItemId) => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      await removeFromCart(cartItemId);\r\n      toast.success('상품이 장바구니에서 제거되었습니다.');\r\n      await loadCart();\r\n    } catch (error) {\r\n      console.error('장바구니 제거 실패:', error);\r\n      toast.error('상품을 제거하지 못했습니다.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [loadCart]);\r\n\r\n  // 장바구니 비우기 (useCallback 적용)\r\n  const emptyCart = useCallback(async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      await clearCart();\r\n      toast.success('장바구니가 비워졌습니다.');\r\n      setCartItems([]);\r\n      setTotalItems(0);\r\n      setTotalPrice(0);\r\n    } catch (error) {\r\n      console.error('장바구니 비우기 실패:', error);\r\n      toast.error('장바구니를 비우지 못했습니다.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 로그인 상태가 변경되면 장바구니 정보 로드\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      loadCart();\r\n    } else {\r\n      setCartItems([]);\r\n      setTotalItems(0);\r\n      setTotalPrice(0);\r\n    }\r\n  }, [isAuthenticated, loadCart]);\r\n\r\n  // 컨텍스트에 제공할 값\r\n  const value = {\r\n    cartItems,\r\n    totalItems,\r\n    totalPrice,\r\n    isLoading,\r\n    loadCart,\r\n    addItemToCart,\r\n    updateItemQuantity,\r\n    removeItemFromCart,\r\n    emptyCart,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n\r\n// 장바구니 컨텍스트 사용을 위한 훅\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart는 CartProvider 내부에서만 사용할 수 있습니다.');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}